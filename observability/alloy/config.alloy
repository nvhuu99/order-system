local.file "endpoints" {
    // The endpoints file is used to define the endpoints, credentials and options
    // for the Alloy export to.
    filename = "/etc/alloy/endpoints.json"
}

// =============================================================================
//  RECEIVERS
// =============================================================================

    otelcol.receiver.otlp "otlp_receiver" {
        grpc {
            endpoint = "0.0.0.0:4317"
        }
        http {
            endpoint = "0.0.0.0:4318"
        }

        output {
            traces = [
                otelcol.connector.spanmetrics.tracemetrics.input,
                otelcol.processor.batch.default.input,
            ]
            metrics = [
                otelcol.processor.batch.default.input,
            ]
        }
    }

    // Loki's HTTP REST API
    loki.source.api "default" {
        http {
            listen_address = "0.0.0.0"
            listen_port = "3100"
        }

        forward_to = [loki.process.default.receiver]
    }
    loki.process "default" {
        stage.json {
            expressions = {
                originalLoggedTime = "timestamp",
                namespace  = "namespace",
            }
        }

        stage.labels {
            values = {
                namespace = "namespace",
            }
        }

        forward_to = [otelcol.receiver.loki.default.receiver]
    }
    otelcol.receiver.loki "default" {
        output {
            logs = [otelcol.processor.batch.default.input]
        }
    }

// =============================================================================
//  PROCESSORS
// =============================================================================

    // Batch telementries
    otelcol.processor.batch "default" {
        send_batch_size = 1000
        send_batch_max_size = 2000
        timeout = "5s"
        output {
            traces = [otelcol.exporter.otlp.tempo.input]
            metrics = [otelcol.exporter.prometheus.default.input]
            logs = [otelcol.exporter.loki.default.input]
        }
    }

// =============================================================================
//  TRACES PIPELINES
// =============================================================================

    // Export trace spans to Tempo
    otelcol.auth.headers "tempo" {
        header {
            key = "Authorization"
            value = join(["Basic ", json_path(local.file.endpoints.content, ".traces.basicAuthToken")[0]], "")
        }
    }
    otelcol.exporter.otlp "tempo" {
        client {
            auth = otelcol.auth.headers.tempo.handler

            endpoint = json_path(local.file.endpoints.content, ".traces.url")[0]

            tls {
                insecure = json_path(local.file.endpoints.content, ".traces.tls.insecure")[0]
                insecure_skip_verify = json_path(local.file.endpoints.content, ".traces.tls.insecureSkipVerify")[0]
            }
        }
    }

// =============================================================================
//  METRICS PIPELINES
// =============================================================================

    // Span metric
    otelcol.connector.spanmetrics "tracemetrics" {
        metrics_flush_interval = "15s"

        histogram {
            unit = "ms"
            explicit {
            }
        }

        exemplars {
            enabled = true
        }

        output {
            metrics = [otelcol.exporter.prometheus.default.input]
        }
    }


    // Export metrics to Prometheus
    otelcol.exporter.prometheus "default" {
        // Alloy has a local Prometheus that uses Mimir as its remote storage
        forward_to = [prometheus.remote_write.mimir.receiver]
    }
    prometheus.remote_write "mimir" {
        endpoint {
            url = json_path(local.file.endpoints.content, ".metrics.url")[0]

            basic_auth {
                username = json_path(local.file.endpoints.content, ".metrics.basicAuth.username")[0]
                password = json_path(local.file.endpoints.content, ".metrics.basicAuth.password")[0]
            }
        }
    }

// =============================================================================
//  LOGS PIPELINES
// =============================================================================

    // Export logs to Loki
    otelcol.exporter.loki "default" {
    forward_to = [loki.write.default.receiver]
    }

    loki.write "default" {
        endpoint {
            url = json_path(local.file.endpoints.content, ".logs.url")[0]

            basic_auth {
                username = json_path(local.file.endpoints.content, ".logs.basicAuth.username")[0]
                password = json_path(local.file.endpoints.content, ".logs.basicAuth.password")[0]
            }
        }
    }