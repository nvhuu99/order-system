name: order-processing-system

networks:
  order-processing-system:
    driver: bridge

services:
  alloy:
    container_name: alloy
    hostname: alloy
    restart: unless-stopped
    image: grafana/alloy:v1.9.1
    cpus: "0.25"
    mem_limit: "256M"
    ports:
      - "12350:12350"
      - "12347:12345"
      - "12348:12348"
      - "6832:6832"
      - "4317:4317" # OLTP GRPC
      - "4318:4318" # OLTP HTTP
      - "3110:3100" # Loki HTTP API
    volumes:
      - "./observability/alloy/config.alloy:/etc/alloy/config.alloy"
      - "./observability/alloy/endpoints.json:/etc/alloy/endpoints.json"
    networks:
      - order-processing-system
    command: [
      "run",
      "--server.http.listen-addr=0.0.0.0:12345",
      "--stability.level=public-preview",
      "/etc/alloy/config.alloy",
    ]

  grafana:
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    image: grafana/grafana:12.0.2
    cpus: "0.25"
    mem_limit: "256M"
    volumes:
      - "./observability/grafana/dashboards:/var/lib/grafana/dashboards"
      - "./observability/grafana/provisioning:/etc/grafana/provisioning"
    ports:
      - "3000:3000"
    networks:
      - order-processing-system
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor traceToMetrics traceToProfiles datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app,grafana-pyroscope-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true

  tempo:
    container_name: tempo
    hostname: tempo
    restart: unless-stopped
    image: grafana/tempo:2.8.1
    cpus: "0.25"
    mem_limit: "256M"
    networks:
      - order-processing-system
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - "./observability/tempo/tempo.yaml:/etc/tempo.yaml"

  loki:
    container_name: loki
    hostname: loki
    restart: unless-stopped
    image: grafana/loki:3.5.1
    cpus: "0.25"
    mem_limit: "256M"
    command: [ "--pattern-ingester.enabled=true", "-config.file=/etc/loki/loki.yaml" ]
    networks:
      - order-processing-system
    volumes:
      - "./observability/loki/loki.yaml:/etc/loki/loki.yaml"

  mimir:
    container_name: mimir
    hostname: mimir
    restart: unless-stopped
    image: grafana/mimir:2.16.0
    cpus: "0.25"
    mem_limit: "256M"
    command: [ "-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml" ]
    networks:
      - order-processing-system
    volumes:
      - "./observability/mimir/mimir.yaml:/etc/mimir.yaml"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    cpus: "0.25"
    mem_limit: "256M"
    ports:
      - "8090:8080"
    networks:
      - order-processing-system
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker:/var/lib/docker:ro

  redis:
    container_name: redis
    hostname: redis
    restart: unless-stopped
    image: redis:7.4.2-alpine
    cpus: "1"
    mem_limit: "2G"
    ports:
      - "6379:6379"
    networks:
        - order-processing-system

  eureka-server:
    container_name: eureka-server
    hostname: eureka-server
    restart: unless-stopped
    build:
      context: ./services/eureka-server
      dockerfile: Dockerfile
    cpus: "0.25"
    mem_limit: "256M"
    ports:
      - "8761:8761"
    networks:
      - order-processing-system

  centralized-config:
    container_name: centralized-config
    hostname: centralized-config
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/centralized-config
      dockerfile: Dockerfile
    cpus: "0.25"
    mem_limit: "256M"
    ports:
      - "8888:8888"
    networks:
      - order-processing-system
    depends_on:
      - eureka-server

  inventory:
    container_name: inventory
    hostname: inventory
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/inventory
      dockerfile: Dockerfile
    cpus: "1"
    mem_limit: "1G"
    ports:
      - "9091:9091"
    networks:
      - order-processing-system
    depends_on:
      - eureka-server
      - centralized-config

  cart:
    container_name: cart
    hostname: cart
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/cart
      dockerfile: Dockerfile
    cpus: "1"
    mem_limit: "1G"
    ports:
      - "8082:8082"
    networks:
      - order-processing-system
    depends_on:
      - eureka-server
      - centralized-config
      - redis
      - inventory
