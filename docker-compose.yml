name: order-processing-system

networks:
  order-processing-system:
    driver: bridge

services:
  redis:
    container_name: redis-master
    hostname: redis-master
    restart: unless-stopped
    image: redis:7.4.2-alpine
    cpus: "0.1"
    mem_limit: "128mb"
    ports:
      - "6379:6379"
    networks:
        - order-processing-system

  kafka-controller:
    image: apache/kafka:latest
    container_name: kafka-controller
    hostname: kafka-controller
    restart: unless-stopped
    ports:
      - 9093:9093
    networks:
      - order-processing-system
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  kafka-broker:
    image: apache/kafka:latest
    container_name: kafka-broker
    hostname: kafka-broker
    restart: unless-stopped
    ports:
      - 9092:9092
    networks:
      - order-processing-system
    depends_on:
      - kafka-controller
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker:19092,PLAINTEXT_HOST://kafka-broker:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-controller:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: false

  inventory-service:
    container_name: inventory-service
    hostname: inventory-service
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/inventory
      dockerfile: Dockerfile
    cpus: "1"
    mem_limit: "512mb"
    ports:
      - "9090:9090"
    networks:
      - order-processing-system

  cart-service:
    container_name: cart-service
    hostname: cart-service
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/cart
      dockerfile: Dockerfile
    cpus: "1"
    mem_limit: "512mb"
    ports:
      - "9094:9091"
      - "8081:8081"
    depends_on:
      - inventory-service
      - redis
      - kafka-broker
    networks:
      - order-processing-system

  shop-service:
    container_name: shop-service
    hostname: shop-service
    restart: unless-stopped
    env_file:
      - .env.docker
    build:
      context: ./services/shop
      dockerfile: Dockerfile
    cpus: "0.25"
    mem_limit: "368mb"
    ports:
      - "8080:8080"
    networks:
      - order-processing-system
    depends_on:
      - cart-service

#  cart-update-load-test:
#    image: grafana/k6:latest
#    container_name: cart-request
#    command: ["run", "/scripts/cart-update-load-test.js"]
#    env_file:
#      - .env.docker
#    volumes:
#      - ./k6/scripts/cart-service/cart-update-load-test.js:/scripts/cart-update-load-test.js
#    deploy:
#      resources:
#        limits:
#          cpus: '0.2'
#          memory: 128M
#        reservations:
#          cpus: '0.2'
#          memory: 128M
#    restart: "no"
#    networks:
#      - order-processing-system
