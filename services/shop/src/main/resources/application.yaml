server:
  port: ${SHOP_API_PORT:8080}

logging:
  level:
    io.grpc: ERROR
    io.opentelemetry.exporter: OFF
    io.opentelemetry.exporter.internal.http.HttpExporter: OFF
    io.lettuce.core: OFF

order-processing-system:
  messaging:
    cart-update-requests:
      topic-name: "cart-update-request"

spring:
  application:
    name: shop-service

  grpc:
    client:
      channels:
        cart-service:
          address: ${CART_SVC_HOST:cart-service}:${CART_SVC_GRPC_PORT:9091}
          plaintext: true

  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
    admin:
      auto-create: true
    listener:
      ack-mode: manual
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  tracing: { enabled: false }
  otlp:
    tracing:
      endpoint: ${TEMPO_PUSH_API_ENDPOINT:http://tempo-distributor:4318/v1/traces}
    metrics:
      export: { enabled: false }

---

spring:
  profiles: { active: test }
  kafka:
    bootstrap-servers: localhost:9092

---

spring:
  profiles: { active: staging }

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0