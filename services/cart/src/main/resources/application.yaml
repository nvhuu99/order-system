server:
  port: ${CART_SVC_API_PORT:8081}

logging:
  level:
    io.grpc: ERROR
    org.springframework.kafka: ERROR
    org.apache.kafka: ERROR
    io.opentelemetry.exporter: OFF
    io.opentelemetry.exporter.internal.http.HttpExporter: OFF
    io.lettuce.core: OFF

order-processing-system:
  messaging:
    cart-update-requests:
      topic-name: "cart-update-request"

  handlers:
    cart-update-requests:
      timeout-sec: 15
      wait-sec: 10

spring:
  application:
    name: cart-service

  data:
    redis:
      connect-timeout: 5
      host: ${REDIS_HOST:redis-master}
      port: ${REDIS_PORT:6379}

  grpc:
    server:
      port: ${CART_SVC_GRPC_PORT:9091}
      ssl:
        secure: false
    client:
      channels:
        inventory-service:
          address: ${INVENTORY_SVC_HOST:inventory-service}:${INVENTORY_SVC_GRPC_PORT:9090}
          plaintext: true

  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
    admin:
      auto-create: true
    listener:
      ack-mode: manual
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  tracing: { enabled: false }
  otlp:
    tracing:
      endpoint: ${TEMPO_PUSH_API_ENDPOINT:http://tempo-distributor:4318/v1/traces}
    metrics:
      export: { enabled: false }

---

spring:
  profiles: { active: development }

logging:
  level:
    com.example.cart.services.cart_service: DEBUG

---

spring:
  profiles:
    active: staging

management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0