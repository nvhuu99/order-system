logging:
  level:
    io.grpc: ERROR
    org.springframework.kafka: ERROR
    org.apache.kafka: ERROR
    io.opentelemetry.exporter: ERROR
    io.opentelemetry.exporter.internal.http.HttpExporter: ERROR
    io.lettuce.core: ERROR
    org.hibernate: ERROR
    org.springframework.r2dbc: ERROR

order-system:
  messaging:
    product-reservation-requests:
      topic-name: "product-reservation-requests"
      topic-partitions: "0"
  handlers:
    product-reservation-requests:
      timeout-sec: 15
      wait-sec: 10

spring:
  application:
    name: inventory_service

  grpc:
    server:
      port: ${INVENTORY_SVC_GRPC_PORT:9090}
      ssl:
        secure: false

  r2dbc:
    url: "jdbc:mysql://${MYSQL_HOST:mysql}:${MYSQL_PORT:3306}/inventory?createDatabaseIfNotExist=true&characterEncoding=UTF-8&serverTimeZone=UTC&allowPublicKeyRetrieval=true&useSSL=false"
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:admin}

  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka-broker}:${KAFKA_PORT:9092}
    admin:
      auto-create: false
    listener:
      ack-mode: manual
    consumer:
      group-id: ${HOSTNAME:inventory-service}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  tracing: { enabled: false }
  otlp:
    tracing:
      endpoint: ${TEMPO_PUSH_API_ENDPOINT:http://tempo:4318/v1/traces}
    metrics:
      export:
        enabled: false
